name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_DB: postgis_db
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5433:5432
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5
      test-db:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_DB: postgis_test_db
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5434:5432
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov coveralls
      - name: Wait for DBs to be healthy
        run: |
          until pg_isready -h localhost -p 5433 -U postgres; do sleep 2; done
          until pg_isready -h localhost -p 5434 -U postgres; do sleep 2; done
      - name: Run tests with coverage
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          TEST_DATABASE_URL: ${{ env.TEST_DATABASE_URL }}
        run: pytest --cov=app --cov-report=xml
      - name: Upload coverage to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: coveralls --service=github
